// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FilmActors", b =>
                {
                    b.Property<Guid>("FilmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FilmId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("FilmActors");

                    b.HasData(
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000001"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000001"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000002"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000002"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000003"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000003"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000004"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000004"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000005"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000009")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000005"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000010")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000006"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000006"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000012")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000006"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000013")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000007"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000014")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000007"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000015")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000008"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000016")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000008"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000017")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000009"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000018")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000009"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000019")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000010"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000020")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000010"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000021")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000011"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000022")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000011"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000023")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000024")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000025")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000026")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000013"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000022")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000013"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000027")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000014"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000028")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000015"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000015")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000015"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000029")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000010")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000030")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000031")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000017"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000020")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000032")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000033")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000034")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000020"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000035")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000020"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000036")
                        },
                        new
                        {
                            FilmId = new Guid("00000000-0000-0000-0000-000000000020"),
                            ActorId = new Guid("00000000-0000-0000-0000-000000000037")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Name = "Jack Nicholson"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Name = "Shelley Duvall"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Name = "Arnold Schwarzenegger"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Name = "Linda Hamilton"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "Michael J. Fox"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Name = "Christopher Lloyd"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Name = "John Goodman"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            Name = "Billy Crystal"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            Name = "Ralph Fiennes"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            Name = "Adrien Brody"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            Name = "Daniel Radcliffe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            Name = "Rupert Grint"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            Name = "Emma Watson"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            Name = "George MacKay"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000015"),
                            Name = "Benedict Cumberbatch"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000016"),
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000017"),
                            Name = "Kate Winslet"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000018"),
                            Name = "Mike Myers"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000019"),
                            Name = "Eddie Murphy"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000020"),
                            Name = "Tom Hanks"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000021"),
                            Name = "Robin Wright"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000022"),
                            Name = "Joaquin Phoenix"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000023"),
                            Name = "Scarlett Johansson"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000024"),
                            Name = "Bradley Cooper"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000025"),
                            Name = "Ed Helms"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000026"),
                            Name = "Zach Galifianakis"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000027"),
                            Name = "Robert De Niro"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000028"),
                            Name = "Malcolm McDowell"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000029"),
                            Name = "Keira Knightley"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000030"),
                            Name = "Bill Murray"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000031"),
                            Name = "Benicio del Toro"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000032"),
                            Name = "Ed Asner"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000033"),
                            Name = "Christopher Plummer"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000034"),
                            Name = "Jeff Bridges"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000035"),
                            Name = "Macaulay Culkin"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000036"),
                            Name = "Joe Pesci"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000037"),
                            Name = "Daniel Stern"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("HasApprovedTermsAndConditions")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2b8d4a5-7353-4110-b6b2-bd44cf703ed5",
                            DateOfBirth = new DateTime(2022, 10, 27, 10, 6, 38, 587, DateTimeKind.Local).AddTicks(2317),
                            Email = "admin@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTermsAndConditions = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@IMI.BE",
                            NormalizedUserName = "IMIADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEARK/Ci9CQiz+gjnSXhnK6dKnUVS+CmPPl4BitKn99XXap+9ScpuM32Yvd6p8oPyPQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a0487b4-5dc6-4ea0-b528-0c75f5d85927",
                            TwoFactorEnabled = false,
                            UserName = "ImiAdmin"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "66864c70-58b7-4a35-9073-8da9481950eb",
                            DateOfBirth = new DateTime(2022, 10, 27, 10, 6, 38, 587, DateTimeKind.Local).AddTicks(2347),
                            Email = "user@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTermsAndConditions = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@IMI.BE",
                            NormalizedUserName = "IMIUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAECwq+dqo81ZrhG78/3LABfXX9n0vn5su8X6bA1L1ezZJYeYgppS+TQJfnT6KpPHgTQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6c9a625b-e971-4d40-8b19-6213fc8ab426",
                            TwoFactorEnabled = false,
                            UserName = "ImiUser"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3d773f4d-7a17-493c-94a5-7082277bda84",
                            DateOfBirth = new DateTime(2022, 10, 27, 10, 6, 38, 587, DateTimeKind.Local).AddTicks(2349),
                            Email = "user@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTermsAndConditions = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@IMI.BE",
                            NormalizedUserName = "IMIREFUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAENcPC/s/9MNnUi9hEIHaNK9x1AjhPS+g9HGBgUXSwLTE1hgRRJbLi2BVMUZJy9HpCA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cc30e923-f5bb-4723-81a3-6e449795f406",
                            TwoFactorEnabled = false,
                            UserName = "ImiRefuser"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Name = "Stanley Kubrick"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Name = "Robert Zemeckis"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Name = "James Cameron"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Name = "Pete Docter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "Andrew Adamson"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Name = "Wes Anderson"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Name = "Chris Columbus"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            Name = "Sam Mendes"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            Name = "Spike Jonze"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            Name = "Todd Phillips"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            Name = "Morten Tyldum"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            Name = "Joel Coen"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Film", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000001"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000008"),
                            Image = "https://i.imgur.com/WaC2BJy.jpg",
                            ReleaseYear = 1980,
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000003"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Image = "https://i.imgur.com/oG6lDFU.jpg",
                            ReleaseYear = 1984,
                            Title = "The Terminator"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Image = "https://i.imgur.com/dlmlSTB.jpg",
                            ReleaseYear = 1985,
                            Title = "Back to the Future"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000004"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Image = "https://i.imgur.com/yL2zevc.jpg",
                            ReleaseYear = 2001,
                            Title = "Monsters, Inc."
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000006"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Image = "https://i.imgur.com/REDhy8B.jpg",
                            ReleaseYear = 2014,
                            Title = "The Grand Budapest Hotel"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000007"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000006"),
                            Image = "https://i.imgur.com/Elt7LFe.jpg",
                            ReleaseYear = 2001,
                            Title = "Harry Potter and the Philosopher’s Stone"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000008"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000007"),
                            Image = "https://i.imgur.com/s7ai915.jpg",
                            ReleaseYear = 2019,
                            Title = "1917"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000003"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000009"),
                            Image = "https://i.imgur.com/Yua2ZyQ.jpg",
                            ReleaseYear = 1997,
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000005"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Image = "https://i.imgur.com/7oAYSgZ.jpg",
                            ReleaseYear = 2001,
                            Title = "Shrek"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Image = "https://i.imgur.com/MnTykWM.jpg",
                            ReleaseYear = 1994,
                            Title = "Forrest Gump"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000009"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000009"),
                            Image = "https://i.imgur.com/ipvfgza.jpg",
                            ReleaseYear = 2013,
                            Title = "Her"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000010"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Image = "https://i.imgur.com/nSWWPDJ.jpg",
                            ReleaseYear = 2009,
                            Title = "The Hangover"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000010"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000010"),
                            Image = "https://i.imgur.com/vQKKmkP.jpg",
                            ReleaseYear = 2019,
                            Title = "Joker"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000001"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Image = "https://i.imgur.com/p5DDiYQ.jpg",
                            ReleaseYear = 1971,
                            Title = "A Clockwork Orange"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000015"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000011"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000007"),
                            Image = "https://i.imgur.com/S2c56sS.jpg",
                            ReleaseYear = 2014,
                            Title = "The Imitation Game"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000016"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000006"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Image = "https://i.imgur.com/BnL6bre.jpg",
                            ReleaseYear = 2021,
                            Title = "The French Dispatch"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000017"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Image = "https://i.imgur.com/qsWpLG0.jpg",
                            ReleaseYear = 2000,
                            Title = "Cast Away"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000018"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000004"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Image = "https://i.imgur.com/1qTvRjR.jpg",
                            ReleaseYear = 2009,
                            Title = "Up"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000019"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000012"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Image = "https://i.imgur.com/IksTt38.jpg",
                            ReleaseYear = 1998,
                            Title = "The Big Lebowski"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000020"),
                            DirectorId = new Guid("00000000-0000-0000-0000-000000000007"),
                            GenreId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Image = "https://i.imgur.com/uyjsvzX.jpg",
                            ReleaseYear = 1990,
                            Title = "Home Alone"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Name = "Animation"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Name = "History"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            Name = "Thriller"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Admin",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "User",
                            UserId = "2"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("FilmActors", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Film", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Director", "Director")
                        .WithMany("Films")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Genre", "Genre")
                        .WithMany("Films")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Director", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Genre", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
